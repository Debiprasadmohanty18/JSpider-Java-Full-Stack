
// Test Case - 1								| //Test Case - 2
												|
class AA {										|class AA1 {
	AA()										|		int i;
	{											|		AA1(int i) 					
		super();								|		{
	}											|			this.i = i;					
}												|		}			
class BB extends AA {							|}					
	BB()										|class BB1 extends AA1 {										
	{											|		BB1() 		
		super();								|		{				
	}											|			super();								
}												|		}							
												|}							
/* Output :- 									|											
 	It will run perfectly.						|/* Output :-				
*/												|	 	It will give Compile time error.
												|		because, here super(); will call to parent class's no argument constructor.
												|		and no-argument constructor is not there.
												|*/
												|
================================================|================================================================================================												
												|			
// Test Case - 3								|// Test Case - 4		
												|						
class A1A {										|class AA2 {		
	int i;										|	 int i;			
}												|	 AA2(int i)	
class B1B extends A1A {							|	 {			
	int i;										|							
	B1B(int i)									|	 }						
	{											|}						
		super();								|class BB2 extends AA2 {									
		this.i = i;								|	 int i;					
	}											|	 BB2(int i) 								
}												|	 {							
												|		this.i = i;								
/* Output :-									|		super(i);					
 	It will run perfectly.						|	 }				
 	because, here super(); will call to 		|}														
 	parent's no argument constructor, 			|										
 	As we do not have 							|/* Output :-									
 	No-argument constructor explicitly 			|	 It will give Compile time error.														
 	so, there is one 							|	 because, super(i); should be in
 	no-argument default constructor 			|			 1st line of every constructor.				
 	JVM will provide.  							|*/												
*/												|									
================================================|================================================================================================							

